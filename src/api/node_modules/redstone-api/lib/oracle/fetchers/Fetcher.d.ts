export declare type SourceType = "cache-layer" | "streamr" | "streamr-storage";
export interface SignedDataPackageResponse {
    timestamp: number;
    prices: {
        symbol: string;
        value: any;
    }[];
    signature: string;
    liteSignature: string;
}
export interface SourceConfig {
    type: SourceType;
    url?: string;
    providerId?: string;
    evmSignerAddress: string;
    streamrEndpointPrefix?: string;
    disabledForSinglePrices?: boolean;
}
export declare abstract class Fetcher {
    protected config: SourceConfig;
    protected asset?: string | undefined;
    constructor(config: SourceConfig, asset?: string | undefined);
    abstract getLatestData(): Promise<SignedDataPackageResponse>;
    getLatestDataWithTimeout(timeoutMs: number): Promise<SignedDataPackageResponse>;
    getEvmSignerAddress(): string;
}
